{
    "openapi": "3.1.0",
    "info": {
        "title": "StepFlow API",
        "description": "Workflow engine API",
        "version": "0.1.0"
    },
    "paths": {
        "/metrics": {
            "get": {
                "summary": "Metrics",
                "description": "Prometheus scrape endpoint.",
                "operationId": "metrics_metrics_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/workflow_visibility/{run_id}": {
            "get": {
                "tags": [
                    "workflow_visibility"
                ],
                "summary": "Get Workflow Visibility",
                "description": "获取工作流可见性信息。不存在则从 WorkflowExecution 衍生生成。",
                "operationId": "get_workflow_visibility_workflow_visibility__run_id__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Workflow Visibility Workflow Visibility  Run Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_visibility/": {
            "get": {
                "tags": [
                    "workflow_visibility"
                ],
                "summary": "List Workflow Visibility",
                "description": "查询工作流可见性信息，可选过滤（status、workflow_type）",
                "operationId": "list_workflow_visibility_workflow_visibility__get",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Status"
                        }
                    },
                    {
                        "name": "workflow_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Workflow Type"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response List Workflow Visibility Workflow Visibility  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_executions/": {
            "post": {
                "tags": [
                    "workflow_executions"
                ],
                "summary": "Start Workflow",
                "operationId": "start_workflow_workflow_executions__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartExecutionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": true,
                                    "type": "object",
                                    "title": "Response Start Workflow Workflow Executions  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_executions/{run_id}": {
            "get": {
                "tags": [
                    "workflow_executions"
                ],
                "summary": "Get Execution",
                "operationId": "get_execution_workflow_executions__run_id__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Execution Workflow Executions  Run Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workflow_executions"
                ],
                "summary": "Cancel Workflow",
                "operationId": "cancel_workflow_workflow_executions__run_id__delete",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Cancel Workflow Workflow Executions  Run Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_executions/{run_id}/tasks": {
            "get": {
                "tags": [
                    "workflow_executions"
                ],
                "summary": "Get Workflow Execution Tasks",
                "operationId": "get_workflow_execution_tasks_workflow_executions__run_id__tasks_get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": true
                                    },
                                    "title": "Response Get Workflow Execution Tasks Workflow Executions  Run Id  Tasks Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_templates/": {
            "get": {
                "tags": [
                    "workflow_templates"
                ],
                "summary": "List Templates",
                "operationId": "list_templates_workflow_templates__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response List Templates Workflow Templates  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "workflow_templates"
                ],
                "summary": "Create Template",
                "operationId": "create_template_workflow_templates__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTemplateCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Create Template Workflow Templates  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_templates/{template_id}": {
            "get": {
                "tags": [
                    "workflow_templates"
                ],
                "summary": "Get Template",
                "operationId": "get_template_workflow_templates__template_id__get",
                "parameters": [
                    {
                        "name": "template_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Template Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Template Workflow Templates  Template Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "workflow_templates"
                ],
                "summary": "Update Template",
                "operationId": "update_template_workflow_templates__template_id__put",
                "parameters": [
                    {
                        "name": "template_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Template Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTemplateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Update Template Workflow Templates  Template Id  Put"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workflow_templates"
                ],
                "summary": "Delete Template",
                "operationId": "delete_template_workflow_templates__template_id__delete",
                "parameters": [
                    {
                        "name": "template_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Template Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Delete Template Workflow Templates  Template Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_events/": {
            "get": {
                "tags": [
                    "workflow_events"
                ],
                "summary": "List All Events",
                "description": "列出所有事件（测试用途）。支持分页参数。",
                "operationId": "list_all_events_workflow_events__get",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "default": 100,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Offset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response List All Events Workflow Events  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "workflow_events"
                ],
                "summary": "Record Event",
                "description": "手动记录事件（调试用途）",
                "operationId": "record_event_workflow_events__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecordEventRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Record Event Workflow Events  Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_events/run/{run_id}": {
            "get": {
                "tags": [
                    "workflow_events"
                ],
                "summary": "List Events For Run",
                "description": "列出指定 run_id 的全部事件",
                "operationId": "list_events_for_run_workflow_events_run__run_id__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response List Events For Run Workflow Events Run  Run Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_events/{db_id}": {
            "get": {
                "tags": [
                    "workflow_events"
                ],
                "summary": "Get Event",
                "description": "根据 DB 主键 id 获取事件",
                "operationId": "get_event_workflow_events__db_id__get",
                "parameters": [
                    {
                        "name": "db_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Db Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Get Event Workflow Events  Db Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "workflow_events"
                ],
                "summary": "Delete Event",
                "description": "物理删除事件",
                "operationId": "delete_event_workflow_events__db_id__delete",
                "parameters": [
                    {
                        "name": "db_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Db Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Delete Event Workflow Events  Db Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workflow_events/{db_id}/archive": {
            "post": {
                "tags": [
                    "workflow_events"
                ],
                "summary": "Archive Event",
                "description": "将某条事件标记为 archived=True",
                "operationId": "archive_event_workflow_events__db_id__archive_post",
                "parameters": [
                    {
                        "name": "db_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Db Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": true,
                                    "title": "Response Archive Event Workflow Events  Db Id  Archive Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity_tasks/": {
            "get": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "List All Tasks",
                "operationId": "list_all_tasks_activity_tasks__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityTaskResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List All Tasks Activity Tasks  Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity_tasks/{task_token}": {
            "get": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "Get Task",
                "operationId": "get_task_activity_tasks__task_token__get",
                "parameters": [
                    {
                        "name": "task_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ActivityTaskDTO"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "Delete Task",
                "operationId": "delete_task_activity_tasks__task_token__delete",
                "parameters": [
                    {
                        "name": "task_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity_tasks/run/{run_id}": {
            "get": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "Get Tasks By Run Id",
                "operationId": "get_tasks_by_run_id_activity_tasks_run__run_id__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityTaskResponse"
                                    },
                                    "title": "Response Get Tasks By Run Id Activity Tasks Run  Run Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity_tasks/{task_token}/start": {
            "post": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "Start Task",
                "operationId": "start_task_activity_tasks__task_token__start_post",
                "parameters": [
                    {
                        "name": "task_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity_tasks/{task_token}/complete": {
            "post": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "Complete Task",
                "operationId": "complete_task_activity_tasks__task_token__complete_post",
                "parameters": [
                    {
                        "name": "task_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Token"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompleteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity_tasks/{task_token}/fail": {
            "post": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "Fail Task",
                "operationId": "fail_task_activity_tasks__task_token__fail_post",
                "parameters": [
                    {
                        "name": "task_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Token"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activity_tasks/{task_token}/heartbeat": {
            "post": {
                "tags": [
                    "activity_tasks"
                ],
                "summary": "Heartbeat Task",
                "operationId": "heartbeat_task_activity_tasks__task_token__heartbeat_post",
                "parameters": [
                    {
                        "name": "task_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Token"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HeartbeatRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timers/": {
            "post": {
                "tags": [
                    "Timers"
                ],
                "summary": "Schedule a new timer (idempotent)",
                "operationId": "schedule_timer_timers__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ScheduleTimerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimerDTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Timer not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Timers"
                ],
                "summary": "List all timers (paginated)",
                "operationId": "list_all_timers_timers__get",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 500,
                            "exclusiveMinimum": 0,
                            "default": 100,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Offset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimerDTO"
                                    },
                                    "title": "Response List All Timers Timers  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Timer not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timers/run/{run_id}": {
            "get": {
                "tags": [
                    "Timers"
                ],
                "summary": "List timers for a given workflow run",
                "operationId": "list_timers_for_run_timers_run__run_id__get",
                "parameters": [
                    {
                        "name": "run_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Run Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimerDTO"
                                    },
                                    "title": "Response List Timers For Run Timers Run  Run Id  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Timer not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timers/{timer_id}": {
            "get": {
                "tags": [
                    "Timers"
                ],
                "summary": "Get single timer by ID",
                "operationId": "get_timer_timers__timer_id__get",
                "parameters": [
                    {
                        "name": "timer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Timer Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimerDTO"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Timer not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Timers"
                ],
                "summary": "Delete a timer (physical delete)",
                "operationId": "delete_timer_timers__timer_id__delete",
                "parameters": [
                    {
                        "name": "timer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Timer Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Timer not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timers/{timer_id}/cancel": {
            "post": {
                "tags": [
                    "Timers"
                ],
                "summary": "Cancel a scheduled timer",
                "operationId": "cancel_timer_timers__timer_id__cancel_post",
                "parameters": [
                    {
                        "name": "timer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Timer Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Timer not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timers/{timer_id}/fire": {
            "post": {
                "tags": [
                    "Timers"
                ],
                "summary": "Force‑fire a timer (admin/debug)",
                "operationId": "fire_timer_timers__timer_id__fire_post",
                "parameters": [
                    {
                        "name": "timer_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Timer Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Timer not found"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Root",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ActivityTaskDTO": {
                "properties": {
                    "task_token": {
                        "type": "string",
                        "title": "Task Token"
                    },
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "shard_id": {
                        "type": "integer",
                        "title": "Shard Id"
                    },
                    "seq": {
                        "type": "integer",
                        "title": "Seq"
                    },
                    "activity_type": {
                        "type": "string",
                        "title": "Activity Type"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Result"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "completed_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completed At"
                    },
                    "heartbeat_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Heartbeat At"
                    }
                },
                "type": "object",
                "required": [
                    "task_token",
                    "run_id",
                    "shard_id",
                    "seq",
                    "activity_type",
                    "status"
                ],
                "title": "ActivityTaskDTO"
            },
            "ActivityTaskResponse": {
                "properties": {
                    "task_token": {
                        "type": "string",
                        "title": "Task Token"
                    },
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "activity_type": {
                        "type": "string",
                        "title": "Activity Type"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "input": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Input"
                    },
                    "result": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Result"
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Scheduled At"
                    },
                    "started_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Started At"
                    },
                    "completed_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Completed At"
                    }
                },
                "type": "object",
                "required": [
                    "task_token",
                    "run_id",
                    "activity_type",
                    "status",
                    "scheduled_at"
                ],
                "title": "ActivityTaskResponse"
            },
            "CompleteRequest": {
                "properties": {
                    "result_data": {
                        "type": "string",
                        "title": "Result Data"
                    }
                },
                "type": "object",
                "required": [
                    "result_data"
                ],
                "title": "CompleteRequest"
            },
            "FailRequest": {
                "properties": {
                    "reason": {
                        "type": "string",
                        "title": "Reason"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "required": [
                    "reason"
                ],
                "title": "FailRequest"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HeartbeatRequest": {
                "properties": {
                    "details": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details"
                    }
                },
                "type": "object",
                "title": "HeartbeatRequest"
            },
            "RecordEventRequest": {
                "properties": {
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "shard_id": {
                        "type": "integer",
                        "title": "Shard Id"
                    },
                    "event_id": {
                        "type": "integer",
                        "title": "Event Id"
                    },
                    "event_type": {
                        "type": "string",
                        "title": "Event Type"
                    },
                    "attributes": {
                        "type": "string",
                        "title": "Attributes",
                        "default": "{}"
                    },
                    "archived": {
                        "type": "boolean",
                        "title": "Archived",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "run_id",
                    "shard_id",
                    "event_id",
                    "event_type"
                ],
                "title": "RecordEventRequest"
            },
            "ScheduleTimerRequest": {
                "properties": {
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "state_name": {
                        "type": "string",
                        "title": "State Name"
                    },
                    "shard_id": {
                        "type": "integer",
                        "title": "Shard Id"
                    },
                    "fire_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Fire At"
                    }
                },
                "type": "object",
                "required": [
                    "run_id",
                    "state_name",
                    "shard_id",
                    "fire_at"
                ],
                "title": "ScheduleTimerRequest"
            },
            "StartExecutionRequest": {
                "properties": {
                    "template_id": {
                        "type": "string",
                        "title": "Template Id"
                    },
                    "workflow_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Workflow Id"
                    },
                    "input": {
                        "anyOf": [
                            {
                                "additionalProperties": true,
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Input"
                    },
                    "mode": {
                        "type": "string",
                        "enum": [
                            "inline",
                            "deferred"
                        ],
                        "title": "Mode",
                        "default": "inline"
                    }
                },
                "type": "object",
                "required": [
                    "template_id"
                ],
                "title": "StartExecutionRequest"
            },
            "TimerDTO": {
                "properties": {
                    "timer_id": {
                        "type": "string",
                        "title": "Timer Id"
                    },
                    "run_id": {
                        "type": "string",
                        "title": "Run Id"
                    },
                    "state_name": {
                        "type": "string",
                        "title": "State Name"
                    },
                    "shard_id": {
                        "type": "integer",
                        "title": "Shard Id"
                    },
                    "fire_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Fire At"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "timer_id",
                    "run_id",
                    "state_name",
                    "shard_id",
                    "fire_at",
                    "status"
                ],
                "title": "TimerDTO"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "WorkflowTemplateCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "dsl_definition": {
                        "type": "string",
                        "title": "Dsl Definition"
                    },
                    "template_id": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Template Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "dsl_definition"
                ],
                "title": "WorkflowTemplateCreate"
            },
            "WorkflowTemplateUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "dsl_definition": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dsl Definition"
                    }
                },
                "type": "object",
                "title": "WorkflowTemplateUpdate"
            }
        }
    }
}